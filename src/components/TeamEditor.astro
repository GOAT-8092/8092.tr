---
import { getEntry, getCollection } from 'astro:content';

export interface Props {
  memberId?: string;
  isEdit?: boolean;
}

const { memberId, isEdit = false } = Astro.props;

let member = null;
if (isEdit && memberId) {
  member = await getEntry('team', memberId);
}
---

<div class="bg-white rounded-lg shadow-lg p-6">
  <h2 class="text-2xl font-bold text-purple-800 mb-6">
    {isEdit ? 'Takım Üyesi Düzenle' : 'Yeni Takım Üyesi Ekle'}
  </h2>

  <form id="team-member-form" class="space-y-4" method="POST" action={isEdit ? `/admin/team/${memberId}/update` : '/admin/team/create'}>
    <!-- Basic Information -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
      <div>
        <label for="name" class="block text-sm font-medium text-gray-700 mb-1">
          Ad Soyad <span class="text-red-500">*</span>
        </label>
        <input
          type="text"
          id="name"
          name="name"
          required
          value={member?.data.name || ''}
          class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
          aria-required="true"
        >
      </div>

      <div>
        <label for="role" class="block text-sm font-medium text-gray-700 mb-1">
          Rol/Görev <span class="text-red-500">*</span>
        </label>
        <input
          type="text"
          id="role"
          name="role"
          required
          value={member?.data.role || ''}
          class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
          aria-required="true"
        >
      </div>

      <div>
        <label for="year" class="block text-sm font-medium text-gray-700 mb-1">
          Yıl <span class="text-red-500">*</span>
        </label>
        <input
          type="number"
          id="year"
          name="year"
          required
          min="2019"
          max="2030"
          value={member?.data.year || new Date().getFullYear()}
          class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
          aria-required="true"
        >
      </div>

      <div>
        <label for="team" class="block text-sm font-medium text-gray-700 mb-1">
          Takım Tipi <span class="text-red-500">*</span>
        </label>
        <select
          id="team"
          name="team"
          required
          class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
          aria-required="true"
        >
          <option value="">Seçiniz</option>
          <option value="current" selected={member?.data.team === 'current'}>Mevcut Takım</option>
          <option value="alumni" selected={member?.data.team === 'alumni'}>Mezun</option>
          <option value="mentor" selected={member?.data.team === 'mentor'}>Mentor</option>
        </select>
      </div>
    </div>

    <!-- Additional Information -->
    <div>
      <label for="bio" class="block text-sm font-medium text-gray-700 mb-1">
        Biyografi
      </label>
      <textarea
        id="bio"
        name="bio"
        rows={3}
        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
      >{member?.data.bio || ''}</textarea>
    </div>

    <div>
      <label for="skills" class="block text-sm font-medium text-gray-700 mb-1">
        Yetenekler (virgülle ayrılmış)
      </label>
      <input
        type="text"
        id="skills"
        name="skills"
        value={member?.data.skills?.join(', ') || ''}
        placeholder="Örn: Programlama, CAD, Robotik"
        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
      >
    </div>

    <!-- Image Upload -->
    <div>
      <label for="image" class="block text-sm font-medium text-gray-700 mb-1">
        Profil Fotoğrafı
      </label>
      <input
        type="file"
        id="image"
        name="image"
        accept="image/*"
        class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
      >
      {member?.data.image && (
        <div class="mt-2">
          <img
            src={member.data.image}
            alt="Mevcut profil fotoğrafı"
            class="w-20 h-20 rounded-full object-cover"
          >
          <p class="text-xs text-gray-500 mt-1">Mevcut fotoğraf</p>
        </div>
      )}
    </div>

    <!-- Social Media Links -->
    <div class="bg-gray-50 rounded-lg p-4">
      <h3 class="text-lg font-semibold text-gray-700 mb-3">Sosyal Medya Linkleri</h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
        <div>
          <label for="github" class="block text-sm font-medium text-gray-700 mb-1">
            GitHub
          </label>
          <input
            type="url"
            id="github"
            name="github"
            value={member?.data.social?.github || ''}
            placeholder="https://github.com/kullanici"
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
          >
        </div>

        <div>
          <label for="linkedin" class="block text-sm font-medium text-gray-700 mb-1">
            LinkedIn
          </label>
          <input
            type="url"
            id="linkedin"
            name="linkedin"
            value={member?.data.social?.linkedin || ''}
            placeholder="https://linkedin.com/in/kullanici"
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
          >
        </div>

        <div>
          <label for="instagram" class="block text-sm font-medium text-gray-700 mb-1">
            Instagram
          </label>
          <input
            type="url"
            id="instagram"
            name="instagram"
            value={member?.data.social?.instagram || ''}
            placeholder="https://instagram.com/kullanici"
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
          >
        </div>

        <div>
          <label for="twitter" class="block text-sm font-medium text-gray-700 mb-1">
            Twitter
          </label>
          <input
            type="url"
            id="twitter"
            name="twitter"
            value={member?.data.social?.twitter || ''}
            placeholder="https://twitter.com/kullanici"
            class="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-purple-500"
          >
        </div>
      </div>
    </div>

    <!-- Captain Status -->
    <div class="flex items-center">
      <input
        type="checkbox"
        id="isCaptain"
        name="isCaptain"
        checked={member?.data.isCaptain || false}
        class="h-4 w-4 text-purple-600 focus:ring-purple-500 border-gray-300 rounded"
      >
      <label for="isCaptain" class="ml-2 block text-sm text-gray-700">
        Takım Kaptanı
      </label>
    </div>

    <!-- Form Actions -->
    <div class="flex justify-end space-x-3 pt-4 border-t">
      <a
        href="/admin/team"
        class="px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 transition-colors"
      >
        İptal
      </a>
      <button
        type="submit"
        class="px-4 py-2 bg-purple-600 text-white rounded-md hover:bg-purple-700 transition-colors"
      >
        {isEdit ? 'Güncelle' : 'Ekle'}
      </button>
    </div>
  </form>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('team-member-form');
    const imageInput = document.getElementById('image');

    // Handle image preview
    imageInput.addEventListener('change', (e) => {
      const file = e.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = (e) => {
          // Create or update preview image
          let preview = document.getElementById('image-preview');
          if (!preview) {
            preview = document.createElement('div');
            preview.id = 'image-preview';
            preview.className = 'mt-2';
            imageInput.parentNode.appendChild(preview);
          }
          preview.innerHTML = `
            <img src="${e.target.result}" alt="Önizleme" class="w-20 h-20 rounded-full object-cover">
            <p class="text-xs text-gray-500 mt-1">Yeni fotoğraf</p>
          `;
        };
        reader.readAsDataURL(file);
      }
    });

    // Handle form submission with validation
    form.addEventListener('submit', (e) => {
      const formData = new FormData(form);
      const data = Object.fromEntries(formData);

      // Validate required fields
      if (!data.name || !data.role || !data.year || !data.team) {
        e.preventDefault();
        alert('Lütfen zorunlu alanları doldurun.');
        return;
      }

      // Validate year range
      const year = parseInt(data.year);
      if (year < 2019 || year > 2030) {
        e.preventDefault();
        alert('Yıl 2019-2030 arasında olmalıdır.');
        return;
      }

      // Validate URLs
      const urlFields = ['github', 'linkedin', 'instagram', 'twitter'];
      urlFields.forEach(field => {
        if (data[field] && !isValidUrl(data[field])) {
          e.preventDefault();
          alert(`${field} alanı geçerli bir URL olmalıdır.`);
          return;
        }
      });
    });
  });

  function isValidUrl(string) {
    try {
      new URL(string);
      return true;
    } catch (_) {
      return false;
    }
  }
</script>